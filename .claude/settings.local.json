{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow@alpha",
      "mcp__flow-nexus",
      "Bash(npx:*)",
      "Bash(claude mcp:*)",
      "Bash(npm view:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(where node)",
      "Bash(where npm)",
      "Bash(node:*)",
      "Bash(npm --version)",
      "Read(//c/Users/julien/**)",
      "Bash(timeout 5 npx claude-flow@alpha mcp start)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(npm install:*)",
      "Bash(npm run lint)",
      "Bash(npm run test:unit:*)",
      "Bash(move:*)",
      "Bash(npm run test:unit:run:*)",
      "Bash(git --version)",
      "Bash(test:*)",
      "Bash(timeout:*)",
      "Bash(/dev/null)",
      "Bash(for file in src/components/analysis/*.vue)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(git checkout:*)",
      "Bash(npm run predeploy:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(git push:*)",
      "Bash(git rm:*)",
      "Bash(del \"src\\data\\staticData.ts\")",
      "Bash(find:*)",
      "Bash(npm audit:*)",
      "Bash(if exist node_modules rmdir /s /q node_modules)",
      "Bash(if exist package-lock.json del package-lock.json)",
      "Bash(npm cache clean:*)",
      "Bash(xargs:*)",
      "Bash(del \"e2e\\offline.spec.ts\")",
      "Bash(cat:*)",
      "Bash(npm uninstall:*)",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\src\\services\\supabaseClassesService.ts\")",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\src\\services\\supabaseSchoolYearsService.ts\")",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\src\\services\\supabaseStudentClassesService.ts\")",
      "Bash(if exist \"src\\services\\supabaseClassesService.ts\" del \"src\\services\\supabaseClassesService.ts\")",
      "Bash(if exist \"src\\services\\supabaseSchoolYearsService.ts\" del \"src\\services\\supabaseSchoolYearsService.ts\")",
      "Bash(if exist \"src\\services\\supabaseStudentClassesService.ts\" del \"src\\services\\supabaseStudentClassesService.ts\")",
      "Read(//c/**)",
      "Bash(del:*)",
      "Bash(rm:*)",
      "Bash(powershell:*)",
      "Bash(dir:*)",
      "Bash(if exist \"src\\types\\dtos\\student.dtos.ts\" del \"src\\types\\dtos\\student.dtos.ts\")",
      "Bash(if exist \"src\\types\\dtos\\class.dtos.ts\" del \"src\\types\\dtos\\class.dtos.ts\")",
      "Bash(if exist \"src\\types\\dtos\\evaluation.dtos.ts\" del \"src\\types\\dtos\\evaluation.dtos.ts\")",
      "Bash(if exist \"src\\types\\dtos\\competency.dtos.ts\" del \"src\\types\\dtos\\competency.dtos.ts\")",
      "Bash(del \"src\\types\\dtos\\student.dtos.ts\")",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\tests\\unit\\services\\repositories\\StudentClassRepository.test.ts\")",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\tests\\unit\\stores\\schoolYear.store.test.ts\")",
      "Bash(del \"c:\\Users\\julien\\Documents\\00_github\\evaluations\\tests\\unit\\stores\\schoolYearFilter.store.test.ts\")",
      "Bash(if exist \"tests\\unit\\services\\repositories\\StudentClassRepository.test.ts\" del \"tests\\unit\\services\\repositories\\StudentClassRepository.test.ts\")",
      "Bash(if exist \"tests\\unit\\stores\\schoolYear.store.test.ts\" del \"tests\\unit\\stores\\schoolYear.store.test.ts\")",
      "Bash(if exist \"tests\\unit\\stores\\schoolYearFilter.store.test.ts\" del \"tests\\unit\\stores\\schoolYearFilter.store.test.ts\")",
      "Bash(Select-String -Pattern \"Coverage|File|Test Files|Tests|%\")",
      "Bash(Select-Object -Last 30)",
      "Bash(echo:*)"
    ],
    "deny": []
  }
}
